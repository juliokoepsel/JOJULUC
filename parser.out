Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> functions main_function
Rule 2     functions -> function functions
Rule 3     functions -> empty
Rule 4     function -> FUNCTION TYPE ID LPAREN parameters RPAREN block
Rule 5     parameters -> parameter COMMA parameters
Rule 6     parameters -> parameter
Rule 7     parameters -> empty
Rule 8     parameter -> TYPE ID
Rule 9     main_function -> MAIN LPAREN parameters RPAREN block
Rule 10    block -> LBRACE statements RBRACE
Rule 11    statements -> statement statements
Rule 12    statements -> empty
Rule 13    statement -> declaration_statement
Rule 14    statement -> assignment_statement
Rule 15    statement -> if_statement
Rule 16    statement -> loop_statement
Rule 17    statement -> break_statement
Rule 18    statement -> return_statement
Rule 19    statement -> print_statement
Rule 20    declaration_statement -> TYPE ID ASSIGN expression SEMI
Rule 21    assignment_statement -> ID ASSIGN expression SEMI
Rule 22    if_statement -> IF LPAREN expression RPAREN block else_statement
Rule 23    else_statement -> ELSE block
Rule 24    else_statement -> ELSE if_statement
Rule 25    else_statement -> empty
Rule 26    loop_statement -> LOOP block
Rule 27    break_statement -> BREAK SEMI
Rule 28    return_statement -> RETURN expression SEMI
Rule 29    print_statement -> PRINT LPAREN expression RPAREN SEMI
Rule 30    expression -> expression PLUS expression
Rule 31    expression -> expression MINUS expression
Rule 32    expression -> expression TIMES expression
Rule 33    expression -> expression DIVIDE expression
Rule 34    expression -> expression MOD expression
Rule 35    expression -> expression GT expression
Rule 36    expression -> expression LT expression
Rule 37    expression -> expression EQ expression
Rule 38    expression -> expression NE expression
Rule 39    expression -> expression LE expression
Rule 40    expression -> expression GE expression
Rule 41    expression -> expression AND expression
Rule 42    expression -> expression OR expression
Rule 43    expression -> NOT expression
Rule 44    expression -> LPAREN expression RPAREN
Rule 45    expression -> ID LPAREN arguments RPAREN
Rule 46    expression -> ID
Rule 47    expression -> INT
Rule 48    expression -> FLOAT
Rule 49    expression -> STRING
Rule 50    expression -> BOOL
Rule 51    arguments -> argument COMMA arguments
Rule 52    arguments -> argument
Rule 53    arguments -> empty
Rule 54    argument -> ID LPAREN arguments RPAREN
Rule 55    argument -> ID
Rule 56    argument -> INT
Rule 57    argument -> FLOAT
Rule 58    argument -> STRING
Rule 59    argument -> BOOL
Rule 60    empty -> <empty>

Terminals, with rules where they appear

AND                  : 41
ASSIGN               : 20 21
BOOL                 : 50 59
BREAK                : 27
COMMA                : 5 51
DIVIDE               : 33
ELSE                 : 23 24
EQ                   : 37
FLOAT                : 48 57
FUNCTION             : 4
GE                   : 40
GT                   : 35
ID                   : 4 8 20 21 45 46 54 55
IF                   : 22
INT                  : 47 56
LBRACE               : 10
LE                   : 39
LOOP                 : 26
LPAREN               : 4 9 22 29 44 45 54
LT                   : 36
MAIN                 : 9
MINUS                : 31
MOD                  : 34
NE                   : 38
NOT                  : 43
OR                   : 42
PLUS                 : 30
PRINT                : 29
RBRACE               : 10
RETURN               : 28
RPAREN               : 4 9 22 29 44 45 54
SEMI                 : 20 21 27 28 29
STRING               : 49 58
TIMES                : 32
TYPE                 : 4 8 20
error                : 

Nonterminals, with rules where they appear

argument             : 51 52
arguments            : 45 51 54
assignment_statement : 14
block                : 4 9 22 23 26
break_statement      : 17
declaration_statement : 13
else_statement       : 22
empty                : 3 7 12 25 53
expression           : 20 21 22 28 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 44
function             : 2
functions            : 1 2
if_statement         : 15 24
loop_statement       : 16
main_function        : 1
parameter            : 5 6
parameters           : 4 5 9
print_statement      : 19
program              : 0
return_statement     : 18
statement            : 11
statements           : 10 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . functions main_function
    (2) functions -> . function functions
    (3) functions -> . empty
    (4) function -> . FUNCTION TYPE ID LPAREN parameters RPAREN block
    (60) empty -> .

    FUNCTION        shift and go to state 5
    MAIN            reduce using rule 60 (empty -> .)

    program                        shift and go to state 1
    functions                      shift and go to state 2
    function                       shift and go to state 3
    empty                          shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> functions . main_function
    (9) main_function -> . MAIN LPAREN parameters RPAREN block

    MAIN            shift and go to state 7

    main_function                  shift and go to state 6

state 3

    (2) functions -> function . functions
    (2) functions -> . function functions
    (3) functions -> . empty
    (4) function -> . FUNCTION TYPE ID LPAREN parameters RPAREN block
    (60) empty -> .

    FUNCTION        shift and go to state 5
    MAIN            reduce using rule 60 (empty -> .)

    function                       shift and go to state 3
    functions                      shift and go to state 8
    empty                          shift and go to state 4

state 4

    (3) functions -> empty .

    MAIN            reduce using rule 3 (functions -> empty .)


state 5

    (4) function -> FUNCTION . TYPE ID LPAREN parameters RPAREN block

    TYPE            shift and go to state 9


state 6

    (1) program -> functions main_function .

    $end            reduce using rule 1 (program -> functions main_function .)


state 7

    (9) main_function -> MAIN . LPAREN parameters RPAREN block

    LPAREN          shift and go to state 10


state 8

    (2) functions -> function functions .

    MAIN            reduce using rule 2 (functions -> function functions .)


state 9

    (4) function -> FUNCTION TYPE . ID LPAREN parameters RPAREN block

    ID              shift and go to state 11


state 10

    (9) main_function -> MAIN LPAREN . parameters RPAREN block
    (5) parameters -> . parameter COMMA parameters
    (6) parameters -> . parameter
    (7) parameters -> . empty
    (8) parameter -> . TYPE ID
    (60) empty -> .

    TYPE            shift and go to state 15
    RPAREN          reduce using rule 60 (empty -> .)

    parameters                     shift and go to state 12
    parameter                      shift and go to state 13
    empty                          shift and go to state 14

state 11

    (4) function -> FUNCTION TYPE ID . LPAREN parameters RPAREN block

    LPAREN          shift and go to state 16


state 12

    (9) main_function -> MAIN LPAREN parameters . RPAREN block

    RPAREN          shift and go to state 17


state 13

    (5) parameters -> parameter . COMMA parameters
    (6) parameters -> parameter .

    COMMA           shift and go to state 18
    RPAREN          reduce using rule 6 (parameters -> parameter .)


state 14

    (7) parameters -> empty .

    RPAREN          reduce using rule 7 (parameters -> empty .)


state 15

    (8) parameter -> TYPE . ID

    ID              shift and go to state 19


state 16

    (4) function -> FUNCTION TYPE ID LPAREN . parameters RPAREN block
    (5) parameters -> . parameter COMMA parameters
    (6) parameters -> . parameter
    (7) parameters -> . empty
    (8) parameter -> . TYPE ID
    (60) empty -> .

    TYPE            shift and go to state 15
    RPAREN          reduce using rule 60 (empty -> .)

    parameters                     shift and go to state 20
    parameter                      shift and go to state 13
    empty                          shift and go to state 14

state 17

    (9) main_function -> MAIN LPAREN parameters RPAREN . block
    (10) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 22

    block                          shift and go to state 21

state 18

    (5) parameters -> parameter COMMA . parameters
    (5) parameters -> . parameter COMMA parameters
    (6) parameters -> . parameter
    (7) parameters -> . empty
    (8) parameter -> . TYPE ID
    (60) empty -> .

    TYPE            shift and go to state 15
    RPAREN          reduce using rule 60 (empty -> .)

    parameter                      shift and go to state 13
    parameters                     shift and go to state 23
    empty                          shift and go to state 14

state 19

    (8) parameter -> TYPE ID .

    COMMA           reduce using rule 8 (parameter -> TYPE ID .)
    RPAREN          reduce using rule 8 (parameter -> TYPE ID .)


state 20

    (4) function -> FUNCTION TYPE ID LPAREN parameters . RPAREN block

    RPAREN          shift and go to state 24


state 21

    (9) main_function -> MAIN LPAREN parameters RPAREN block .

    $end            reduce using rule 9 (main_function -> MAIN LPAREN parameters RPAREN block .)


state 22

    (10) block -> LBRACE . statements RBRACE
    (11) statements -> . statement statements
    (12) statements -> . empty
    (13) statement -> . declaration_statement
    (14) statement -> . assignment_statement
    (15) statement -> . if_statement
    (16) statement -> . loop_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . print_statement
    (60) empty -> .
    (20) declaration_statement -> . TYPE ID ASSIGN expression SEMI
    (21) assignment_statement -> . ID ASSIGN expression SEMI
    (22) if_statement -> . IF LPAREN expression RPAREN block else_statement
    (26) loop_statement -> . LOOP block
    (27) break_statement -> . BREAK SEMI
    (28) return_statement -> . RETURN expression SEMI
    (29) print_statement -> . PRINT LPAREN expression RPAREN SEMI

    RBRACE          reduce using rule 60 (empty -> .)
    TYPE            shift and go to state 35
    ID              shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    BREAK           shift and go to state 39
    RETURN          shift and go to state 40
    PRINT           shift and go to state 41

    statements                     shift and go to state 25
    statement                      shift and go to state 26
    empty                          shift and go to state 27
    declaration_statement          shift and go to state 28
    assignment_statement           shift and go to state 29
    if_statement                   shift and go to state 30
    loop_statement                 shift and go to state 31
    break_statement                shift and go to state 32
    return_statement               shift and go to state 33
    print_statement                shift and go to state 34

state 23

    (5) parameters -> parameter COMMA parameters .

    RPAREN          reduce using rule 5 (parameters -> parameter COMMA parameters .)


state 24

    (4) function -> FUNCTION TYPE ID LPAREN parameters RPAREN . block
    (10) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 22

    block                          shift and go to state 42

state 25

    (10) block -> LBRACE statements . RBRACE

    RBRACE          shift and go to state 43


state 26

    (11) statements -> statement . statements
    (11) statements -> . statement statements
    (12) statements -> . empty
    (13) statement -> . declaration_statement
    (14) statement -> . assignment_statement
    (15) statement -> . if_statement
    (16) statement -> . loop_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . print_statement
    (60) empty -> .
    (20) declaration_statement -> . TYPE ID ASSIGN expression SEMI
    (21) assignment_statement -> . ID ASSIGN expression SEMI
    (22) if_statement -> . IF LPAREN expression RPAREN block else_statement
    (26) loop_statement -> . LOOP block
    (27) break_statement -> . BREAK SEMI
    (28) return_statement -> . RETURN expression SEMI
    (29) print_statement -> . PRINT LPAREN expression RPAREN SEMI

    RBRACE          reduce using rule 60 (empty -> .)
    TYPE            shift and go to state 35
    ID              shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    BREAK           shift and go to state 39
    RETURN          shift and go to state 40
    PRINT           shift and go to state 41

    statement                      shift and go to state 26
    statements                     shift and go to state 44
    empty                          shift and go to state 27
    declaration_statement          shift and go to state 28
    assignment_statement           shift and go to state 29
    if_statement                   shift and go to state 30
    loop_statement                 shift and go to state 31
    break_statement                shift and go to state 32
    return_statement               shift and go to state 33
    print_statement                shift and go to state 34

state 27

    (12) statements -> empty .

    RBRACE          reduce using rule 12 (statements -> empty .)


state 28

    (13) statement -> declaration_statement .

    TYPE            reduce using rule 13 (statement -> declaration_statement .)
    ID              reduce using rule 13 (statement -> declaration_statement .)
    IF              reduce using rule 13 (statement -> declaration_statement .)
    LOOP            reduce using rule 13 (statement -> declaration_statement .)
    BREAK           reduce using rule 13 (statement -> declaration_statement .)
    RETURN          reduce using rule 13 (statement -> declaration_statement .)
    PRINT           reduce using rule 13 (statement -> declaration_statement .)
    RBRACE          reduce using rule 13 (statement -> declaration_statement .)


state 29

    (14) statement -> assignment_statement .

    TYPE            reduce using rule 14 (statement -> assignment_statement .)
    ID              reduce using rule 14 (statement -> assignment_statement .)
    IF              reduce using rule 14 (statement -> assignment_statement .)
    LOOP            reduce using rule 14 (statement -> assignment_statement .)
    BREAK           reduce using rule 14 (statement -> assignment_statement .)
    RETURN          reduce using rule 14 (statement -> assignment_statement .)
    PRINT           reduce using rule 14 (statement -> assignment_statement .)
    RBRACE          reduce using rule 14 (statement -> assignment_statement .)


state 30

    (15) statement -> if_statement .

    TYPE            reduce using rule 15 (statement -> if_statement .)
    ID              reduce using rule 15 (statement -> if_statement .)
    IF              reduce using rule 15 (statement -> if_statement .)
    LOOP            reduce using rule 15 (statement -> if_statement .)
    BREAK           reduce using rule 15 (statement -> if_statement .)
    RETURN          reduce using rule 15 (statement -> if_statement .)
    PRINT           reduce using rule 15 (statement -> if_statement .)
    RBRACE          reduce using rule 15 (statement -> if_statement .)


state 31

    (16) statement -> loop_statement .

    TYPE            reduce using rule 16 (statement -> loop_statement .)
    ID              reduce using rule 16 (statement -> loop_statement .)
    IF              reduce using rule 16 (statement -> loop_statement .)
    LOOP            reduce using rule 16 (statement -> loop_statement .)
    BREAK           reduce using rule 16 (statement -> loop_statement .)
    RETURN          reduce using rule 16 (statement -> loop_statement .)
    PRINT           reduce using rule 16 (statement -> loop_statement .)
    RBRACE          reduce using rule 16 (statement -> loop_statement .)


state 32

    (17) statement -> break_statement .

    TYPE            reduce using rule 17 (statement -> break_statement .)
    ID              reduce using rule 17 (statement -> break_statement .)
    IF              reduce using rule 17 (statement -> break_statement .)
    LOOP            reduce using rule 17 (statement -> break_statement .)
    BREAK           reduce using rule 17 (statement -> break_statement .)
    RETURN          reduce using rule 17 (statement -> break_statement .)
    PRINT           reduce using rule 17 (statement -> break_statement .)
    RBRACE          reduce using rule 17 (statement -> break_statement .)


state 33

    (18) statement -> return_statement .

    TYPE            reduce using rule 18 (statement -> return_statement .)
    ID              reduce using rule 18 (statement -> return_statement .)
    IF              reduce using rule 18 (statement -> return_statement .)
    LOOP            reduce using rule 18 (statement -> return_statement .)
    BREAK           reduce using rule 18 (statement -> return_statement .)
    RETURN          reduce using rule 18 (statement -> return_statement .)
    PRINT           reduce using rule 18 (statement -> return_statement .)
    RBRACE          reduce using rule 18 (statement -> return_statement .)


state 34

    (19) statement -> print_statement .

    TYPE            reduce using rule 19 (statement -> print_statement .)
    ID              reduce using rule 19 (statement -> print_statement .)
    IF              reduce using rule 19 (statement -> print_statement .)
    LOOP            reduce using rule 19 (statement -> print_statement .)
    BREAK           reduce using rule 19 (statement -> print_statement .)
    RETURN          reduce using rule 19 (statement -> print_statement .)
    PRINT           reduce using rule 19 (statement -> print_statement .)
    RBRACE          reduce using rule 19 (statement -> print_statement .)


state 35

    (20) declaration_statement -> TYPE . ID ASSIGN expression SEMI

    ID              shift and go to state 45


state 36

    (21) assignment_statement -> ID . ASSIGN expression SEMI

    ASSIGN          shift and go to state 46


state 37

    (22) if_statement -> IF . LPAREN expression RPAREN block else_statement

    LPAREN          shift and go to state 47


state 38

    (26) loop_statement -> LOOP . block
    (10) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 22

    block                          shift and go to state 48

state 39

    (27) break_statement -> BREAK . SEMI

    SEMI            shift and go to state 49


state 40

    (28) return_statement -> RETURN . expression SEMI
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 50

state 41

    (29) print_statement -> PRINT . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 58


state 42

    (4) function -> FUNCTION TYPE ID LPAREN parameters RPAREN block .

    FUNCTION        reduce using rule 4 (function -> FUNCTION TYPE ID LPAREN parameters RPAREN block .)
    MAIN            reduce using rule 4 (function -> FUNCTION TYPE ID LPAREN parameters RPAREN block .)


state 43

    (10) block -> LBRACE statements RBRACE .

    $end            reduce using rule 10 (block -> LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 10 (block -> LBRACE statements RBRACE .)
    MAIN            reduce using rule 10 (block -> LBRACE statements RBRACE .)
    TYPE            reduce using rule 10 (block -> LBRACE statements RBRACE .)
    ID              reduce using rule 10 (block -> LBRACE statements RBRACE .)
    IF              reduce using rule 10 (block -> LBRACE statements RBRACE .)
    LOOP            reduce using rule 10 (block -> LBRACE statements RBRACE .)
    BREAK           reduce using rule 10 (block -> LBRACE statements RBRACE .)
    RETURN          reduce using rule 10 (block -> LBRACE statements RBRACE .)
    PRINT           reduce using rule 10 (block -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 10 (block -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 10 (block -> LBRACE statements RBRACE .)


state 44

    (11) statements -> statement statements .

    RBRACE          reduce using rule 11 (statements -> statement statements .)


state 45

    (20) declaration_statement -> TYPE ID . ASSIGN expression SEMI

    ASSIGN          shift and go to state 59


state 46

    (21) assignment_statement -> ID ASSIGN . expression SEMI
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 60

state 47

    (22) if_statement -> IF LPAREN . expression RPAREN block else_statement
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 61

state 48

    (26) loop_statement -> LOOP block .

    TYPE            reduce using rule 26 (loop_statement -> LOOP block .)
    ID              reduce using rule 26 (loop_statement -> LOOP block .)
    IF              reduce using rule 26 (loop_statement -> LOOP block .)
    LOOP            reduce using rule 26 (loop_statement -> LOOP block .)
    BREAK           reduce using rule 26 (loop_statement -> LOOP block .)
    RETURN          reduce using rule 26 (loop_statement -> LOOP block .)
    PRINT           reduce using rule 26 (loop_statement -> LOOP block .)
    RBRACE          reduce using rule 26 (loop_statement -> LOOP block .)


state 49

    (27) break_statement -> BREAK SEMI .

    TYPE            reduce using rule 27 (break_statement -> BREAK SEMI .)
    ID              reduce using rule 27 (break_statement -> BREAK SEMI .)
    IF              reduce using rule 27 (break_statement -> BREAK SEMI .)
    LOOP            reduce using rule 27 (break_statement -> BREAK SEMI .)
    BREAK           reduce using rule 27 (break_statement -> BREAK SEMI .)
    RETURN          reduce using rule 27 (break_statement -> BREAK SEMI .)
    PRINT           reduce using rule 27 (break_statement -> BREAK SEMI .)
    RBRACE          reduce using rule 27 (break_statement -> BREAK SEMI .)


state 50

    (28) return_statement -> RETURN expression . SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 67
    GT              shift and go to state 68
    LT              shift and go to state 69
    EQ              shift and go to state 70
    NE              shift and go to state 71
    LE              shift and go to state 72
    GE              shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75


state 51

    (43) expression -> NOT . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 76

state 52

    (44) expression -> LPAREN . expression RPAREN
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 77

state 53

    (45) expression -> ID . LPAREN arguments RPAREN
    (46) expression -> ID .

    LPAREN          shift and go to state 78
    SEMI            reduce using rule 46 (expression -> ID .)
    PLUS            reduce using rule 46 (expression -> ID .)
    MINUS           reduce using rule 46 (expression -> ID .)
    TIMES           reduce using rule 46 (expression -> ID .)
    DIVIDE          reduce using rule 46 (expression -> ID .)
    MOD             reduce using rule 46 (expression -> ID .)
    GT              reduce using rule 46 (expression -> ID .)
    LT              reduce using rule 46 (expression -> ID .)
    EQ              reduce using rule 46 (expression -> ID .)
    NE              reduce using rule 46 (expression -> ID .)
    LE              reduce using rule 46 (expression -> ID .)
    GE              reduce using rule 46 (expression -> ID .)
    AND             reduce using rule 46 (expression -> ID .)
    OR              reduce using rule 46 (expression -> ID .)
    RPAREN          reduce using rule 46 (expression -> ID .)


state 54

    (47) expression -> INT .

    SEMI            reduce using rule 47 (expression -> INT .)
    PLUS            reduce using rule 47 (expression -> INT .)
    MINUS           reduce using rule 47 (expression -> INT .)
    TIMES           reduce using rule 47 (expression -> INT .)
    DIVIDE          reduce using rule 47 (expression -> INT .)
    MOD             reduce using rule 47 (expression -> INT .)
    GT              reduce using rule 47 (expression -> INT .)
    LT              reduce using rule 47 (expression -> INT .)
    EQ              reduce using rule 47 (expression -> INT .)
    NE              reduce using rule 47 (expression -> INT .)
    LE              reduce using rule 47 (expression -> INT .)
    GE              reduce using rule 47 (expression -> INT .)
    AND             reduce using rule 47 (expression -> INT .)
    OR              reduce using rule 47 (expression -> INT .)
    RPAREN          reduce using rule 47 (expression -> INT .)


state 55

    (48) expression -> FLOAT .

    SEMI            reduce using rule 48 (expression -> FLOAT .)
    PLUS            reduce using rule 48 (expression -> FLOAT .)
    MINUS           reduce using rule 48 (expression -> FLOAT .)
    TIMES           reduce using rule 48 (expression -> FLOAT .)
    DIVIDE          reduce using rule 48 (expression -> FLOAT .)
    MOD             reduce using rule 48 (expression -> FLOAT .)
    GT              reduce using rule 48 (expression -> FLOAT .)
    LT              reduce using rule 48 (expression -> FLOAT .)
    EQ              reduce using rule 48 (expression -> FLOAT .)
    NE              reduce using rule 48 (expression -> FLOAT .)
    LE              reduce using rule 48 (expression -> FLOAT .)
    GE              reduce using rule 48 (expression -> FLOAT .)
    AND             reduce using rule 48 (expression -> FLOAT .)
    OR              reduce using rule 48 (expression -> FLOAT .)
    RPAREN          reduce using rule 48 (expression -> FLOAT .)


state 56

    (49) expression -> STRING .

    SEMI            reduce using rule 49 (expression -> STRING .)
    PLUS            reduce using rule 49 (expression -> STRING .)
    MINUS           reduce using rule 49 (expression -> STRING .)
    TIMES           reduce using rule 49 (expression -> STRING .)
    DIVIDE          reduce using rule 49 (expression -> STRING .)
    MOD             reduce using rule 49 (expression -> STRING .)
    GT              reduce using rule 49 (expression -> STRING .)
    LT              reduce using rule 49 (expression -> STRING .)
    EQ              reduce using rule 49 (expression -> STRING .)
    NE              reduce using rule 49 (expression -> STRING .)
    LE              reduce using rule 49 (expression -> STRING .)
    GE              reduce using rule 49 (expression -> STRING .)
    AND             reduce using rule 49 (expression -> STRING .)
    OR              reduce using rule 49 (expression -> STRING .)
    RPAREN          reduce using rule 49 (expression -> STRING .)


state 57

    (50) expression -> BOOL .

    SEMI            reduce using rule 50 (expression -> BOOL .)
    PLUS            reduce using rule 50 (expression -> BOOL .)
    MINUS           reduce using rule 50 (expression -> BOOL .)
    TIMES           reduce using rule 50 (expression -> BOOL .)
    DIVIDE          reduce using rule 50 (expression -> BOOL .)
    MOD             reduce using rule 50 (expression -> BOOL .)
    GT              reduce using rule 50 (expression -> BOOL .)
    LT              reduce using rule 50 (expression -> BOOL .)
    EQ              reduce using rule 50 (expression -> BOOL .)
    NE              reduce using rule 50 (expression -> BOOL .)
    LE              reduce using rule 50 (expression -> BOOL .)
    GE              reduce using rule 50 (expression -> BOOL .)
    AND             reduce using rule 50 (expression -> BOOL .)
    OR              reduce using rule 50 (expression -> BOOL .)
    RPAREN          reduce using rule 50 (expression -> BOOL .)


state 58

    (29) print_statement -> PRINT LPAREN . expression RPAREN SEMI
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 79

state 59

    (20) declaration_statement -> TYPE ID ASSIGN . expression SEMI
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 80

state 60

    (21) assignment_statement -> ID ASSIGN expression . SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            shift and go to state 81
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 67
    GT              shift and go to state 68
    LT              shift and go to state 69
    EQ              shift and go to state 70
    NE              shift and go to state 71
    LE              shift and go to state 72
    GE              shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75


state 61

    (22) if_statement -> IF LPAREN expression . RPAREN block else_statement
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    RPAREN          shift and go to state 82
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 67
    GT              shift and go to state 68
    LT              shift and go to state 69
    EQ              shift and go to state 70
    NE              shift and go to state 71
    LE              shift and go to state 72
    GE              shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75


state 62

    (28) return_statement -> RETURN expression SEMI .

    TYPE            reduce using rule 28 (return_statement -> RETURN expression SEMI .)
    ID              reduce using rule 28 (return_statement -> RETURN expression SEMI .)
    IF              reduce using rule 28 (return_statement -> RETURN expression SEMI .)
    LOOP            reduce using rule 28 (return_statement -> RETURN expression SEMI .)
    BREAK           reduce using rule 28 (return_statement -> RETURN expression SEMI .)
    RETURN          reduce using rule 28 (return_statement -> RETURN expression SEMI .)
    PRINT           reduce using rule 28 (return_statement -> RETURN expression SEMI .)
    RBRACE          reduce using rule 28 (return_statement -> RETURN expression SEMI .)


state 63

    (30) expression -> expression PLUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 83

state 64

    (31) expression -> expression MINUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 84

state 65

    (32) expression -> expression TIMES . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 85

state 66

    (33) expression -> expression DIVIDE . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 86

state 67

    (34) expression -> expression MOD . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 87

state 68

    (35) expression -> expression GT . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 88

state 69

    (36) expression -> expression LT . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 89

state 70

    (37) expression -> expression EQ . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 90

state 71

    (38) expression -> expression NE . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 91

state 72

    (39) expression -> expression LE . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 92

state 73

    (40) expression -> expression GE . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 93

state 74

    (41) expression -> expression AND . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 94

state 75

    (42) expression -> expression OR . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MOD expression
    (35) expression -> . expression GT expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NE expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression GE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . ID LPAREN arguments RPAREN
    (46) expression -> . ID
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . BOOL

    NOT             shift and go to state 51
    LPAREN          shift and go to state 52
    ID              shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    STRING          shift and go to state 56
    BOOL            shift and go to state 57

    expression                     shift and go to state 95

state 76

    (43) expression -> NOT expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            reduce using rule 43 (expression -> NOT expression .)
    PLUS            reduce using rule 43 (expression -> NOT expression .)
    MINUS           reduce using rule 43 (expression -> NOT expression .)
    TIMES           reduce using rule 43 (expression -> NOT expression .)
    DIVIDE          reduce using rule 43 (expression -> NOT expression .)
    MOD             reduce using rule 43 (expression -> NOT expression .)
    GT              reduce using rule 43 (expression -> NOT expression .)
    LT              reduce using rule 43 (expression -> NOT expression .)
    EQ              reduce using rule 43 (expression -> NOT expression .)
    NE              reduce using rule 43 (expression -> NOT expression .)
    LE              reduce using rule 43 (expression -> NOT expression .)
    GE              reduce using rule 43 (expression -> NOT expression .)
    AND             reduce using rule 43 (expression -> NOT expression .)
    OR              reduce using rule 43 (expression -> NOT expression .)
    RPAREN          reduce using rule 43 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! MOD             [ shift and go to state 67 ]
  ! GT              [ shift and go to state 68 ]
  ! LT              [ shift and go to state 69 ]
  ! EQ              [ shift and go to state 70 ]
  ! NE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! GE              [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 77

    (44) expression -> LPAREN expression . RPAREN
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    RPAREN          shift and go to state 96
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 67
    GT              shift and go to state 68
    LT              shift and go to state 69
    EQ              shift and go to state 70
    NE              shift and go to state 71
    LE              shift and go to state 72
    GE              shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75


state 78

    (45) expression -> ID LPAREN . arguments RPAREN
    (51) arguments -> . argument COMMA arguments
    (52) arguments -> . argument
    (53) arguments -> . empty
    (54) argument -> . ID LPAREN arguments RPAREN
    (55) argument -> . ID
    (56) argument -> . INT
    (57) argument -> . FLOAT
    (58) argument -> . STRING
    (59) argument -> . BOOL
    (60) empty -> .

    ID              shift and go to state 97
    INT             shift and go to state 101
    FLOAT           shift and go to state 102
    STRING          shift and go to state 103
    BOOL            shift and go to state 104
    RPAREN          reduce using rule 60 (empty -> .)

    arguments                      shift and go to state 98
    argument                       shift and go to state 99
    empty                          shift and go to state 100

state 79

    (29) print_statement -> PRINT LPAREN expression . RPAREN SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    RPAREN          shift and go to state 105
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 67
    GT              shift and go to state 68
    LT              shift and go to state 69
    EQ              shift and go to state 70
    NE              shift and go to state 71
    LE              shift and go to state 72
    GE              shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75


state 80

    (20) declaration_statement -> TYPE ID ASSIGN expression . SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            shift and go to state 106
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 67
    GT              shift and go to state 68
    LT              shift and go to state 69
    EQ              shift and go to state 70
    NE              shift and go to state 71
    LE              shift and go to state 72
    GE              shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75


state 81

    (21) assignment_statement -> ID ASSIGN expression SEMI .

    TYPE            reduce using rule 21 (assignment_statement -> ID ASSIGN expression SEMI .)
    ID              reduce using rule 21 (assignment_statement -> ID ASSIGN expression SEMI .)
    IF              reduce using rule 21 (assignment_statement -> ID ASSIGN expression SEMI .)
    LOOP            reduce using rule 21 (assignment_statement -> ID ASSIGN expression SEMI .)
    BREAK           reduce using rule 21 (assignment_statement -> ID ASSIGN expression SEMI .)
    RETURN          reduce using rule 21 (assignment_statement -> ID ASSIGN expression SEMI .)
    PRINT           reduce using rule 21 (assignment_statement -> ID ASSIGN expression SEMI .)
    RBRACE          reduce using rule 21 (assignment_statement -> ID ASSIGN expression SEMI .)


state 82

    (22) if_statement -> IF LPAREN expression RPAREN . block else_statement
    (10) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 22

    block                          shift and go to state 107

state 83

    (30) expression -> expression PLUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            reduce using rule 30 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 30 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 30 (expression -> expression PLUS expression .)
    GT              reduce using rule 30 (expression -> expression PLUS expression .)
    LT              reduce using rule 30 (expression -> expression PLUS expression .)
    EQ              reduce using rule 30 (expression -> expression PLUS expression .)
    NE              reduce using rule 30 (expression -> expression PLUS expression .)
    LE              reduce using rule 30 (expression -> expression PLUS expression .)
    GE              reduce using rule 30 (expression -> expression PLUS expression .)
    AND             reduce using rule 30 (expression -> expression PLUS expression .)
    OR              reduce using rule 30 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 30 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 67

  ! TIMES           [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! GT              [ shift and go to state 68 ]
  ! LT              [ shift and go to state 69 ]
  ! EQ              [ shift and go to state 70 ]
  ! NE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! GE              [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 84

    (31) expression -> expression MINUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            reduce using rule 31 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 31 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 31 (expression -> expression MINUS expression .)
    GT              reduce using rule 31 (expression -> expression MINUS expression .)
    LT              reduce using rule 31 (expression -> expression MINUS expression .)
    EQ              reduce using rule 31 (expression -> expression MINUS expression .)
    NE              reduce using rule 31 (expression -> expression MINUS expression .)
    LE              reduce using rule 31 (expression -> expression MINUS expression .)
    GE              reduce using rule 31 (expression -> expression MINUS expression .)
    AND             reduce using rule 31 (expression -> expression MINUS expression .)
    OR              reduce using rule 31 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 31 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 67

  ! TIMES           [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! GT              [ shift and go to state 68 ]
  ! LT              [ shift and go to state 69 ]
  ! EQ              [ shift and go to state 70 ]
  ! NE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! GE              [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 85

    (32) expression -> expression TIMES expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            reduce using rule 32 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 32 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 32 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 32 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 32 (expression -> expression TIMES expression .)
    MOD             reduce using rule 32 (expression -> expression TIMES expression .)
    GT              reduce using rule 32 (expression -> expression TIMES expression .)
    LT              reduce using rule 32 (expression -> expression TIMES expression .)
    EQ              reduce using rule 32 (expression -> expression TIMES expression .)
    NE              reduce using rule 32 (expression -> expression TIMES expression .)
    LE              reduce using rule 32 (expression -> expression TIMES expression .)
    GE              reduce using rule 32 (expression -> expression TIMES expression .)
    AND             reduce using rule 32 (expression -> expression TIMES expression .)
    OR              reduce using rule 32 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 32 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! MOD             [ shift and go to state 67 ]
  ! GT              [ shift and go to state 68 ]
  ! LT              [ shift and go to state 69 ]
  ! EQ              [ shift and go to state 70 ]
  ! NE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! GE              [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 86

    (33) expression -> expression DIVIDE expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            reduce using rule 33 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 33 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 33 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 33 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 33 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 33 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 33 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 33 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 33 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 33 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 33 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 33 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 33 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 33 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 33 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! MOD             [ shift and go to state 67 ]
  ! GT              [ shift and go to state 68 ]
  ! LT              [ shift and go to state 69 ]
  ! EQ              [ shift and go to state 70 ]
  ! NE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! GE              [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 87

    (34) expression -> expression MOD expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            reduce using rule 34 (expression -> expression MOD expression .)
    PLUS            reduce using rule 34 (expression -> expression MOD expression .)
    MINUS           reduce using rule 34 (expression -> expression MOD expression .)
    TIMES           reduce using rule 34 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 34 (expression -> expression MOD expression .)
    MOD             reduce using rule 34 (expression -> expression MOD expression .)
    GT              reduce using rule 34 (expression -> expression MOD expression .)
    LT              reduce using rule 34 (expression -> expression MOD expression .)
    EQ              reduce using rule 34 (expression -> expression MOD expression .)
    NE              reduce using rule 34 (expression -> expression MOD expression .)
    LE              reduce using rule 34 (expression -> expression MOD expression .)
    GE              reduce using rule 34 (expression -> expression MOD expression .)
    AND             reduce using rule 34 (expression -> expression MOD expression .)
    OR              reduce using rule 34 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 34 (expression -> expression MOD expression .)

  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! MOD             [ shift and go to state 67 ]
  ! GT              [ shift and go to state 68 ]
  ! LT              [ shift and go to state 69 ]
  ! EQ              [ shift and go to state 70 ]
  ! NE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! GE              [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 88

    (35) expression -> expression GT expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            reduce using rule 35 (expression -> expression GT expression .)
    GT              reduce using rule 35 (expression -> expression GT expression .)
    LT              reduce using rule 35 (expression -> expression GT expression .)
    EQ              reduce using rule 35 (expression -> expression GT expression .)
    NE              reduce using rule 35 (expression -> expression GT expression .)
    LE              reduce using rule 35 (expression -> expression GT expression .)
    GE              reduce using rule 35 (expression -> expression GT expression .)
    AND             reduce using rule 35 (expression -> expression GT expression .)
    OR              reduce using rule 35 (expression -> expression GT expression .)
    RPAREN          reduce using rule 35 (expression -> expression GT expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 67

  ! PLUS            [ reduce using rule 35 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 35 (expression -> expression GT expression .) ]
  ! GT              [ shift and go to state 68 ]
  ! LT              [ shift and go to state 69 ]
  ! EQ              [ shift and go to state 70 ]
  ! NE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! GE              [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 89

    (36) expression -> expression LT expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            reduce using rule 36 (expression -> expression LT expression .)
    GT              reduce using rule 36 (expression -> expression LT expression .)
    LT              reduce using rule 36 (expression -> expression LT expression .)
    EQ              reduce using rule 36 (expression -> expression LT expression .)
    NE              reduce using rule 36 (expression -> expression LT expression .)
    LE              reduce using rule 36 (expression -> expression LT expression .)
    GE              reduce using rule 36 (expression -> expression LT expression .)
    AND             reduce using rule 36 (expression -> expression LT expression .)
    OR              reduce using rule 36 (expression -> expression LT expression .)
    RPAREN          reduce using rule 36 (expression -> expression LT expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 67

  ! PLUS            [ reduce using rule 36 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 36 (expression -> expression LT expression .) ]
  ! GT              [ shift and go to state 68 ]
  ! LT              [ shift and go to state 69 ]
  ! EQ              [ shift and go to state 70 ]
  ! NE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! GE              [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 90

    (37) expression -> expression EQ expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            reduce using rule 37 (expression -> expression EQ expression .)
    EQ              reduce using rule 37 (expression -> expression EQ expression .)
    NE              reduce using rule 37 (expression -> expression EQ expression .)
    AND             reduce using rule 37 (expression -> expression EQ expression .)
    OR              reduce using rule 37 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 37 (expression -> expression EQ expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 67
    GT              shift and go to state 68
    LT              shift and go to state 69
    LE              shift and go to state 72
    GE              shift and go to state 73

  ! PLUS            [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! EQ              [ shift and go to state 70 ]
  ! NE              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 91

    (38) expression -> expression NE expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            reduce using rule 38 (expression -> expression NE expression .)
    EQ              reduce using rule 38 (expression -> expression NE expression .)
    NE              reduce using rule 38 (expression -> expression NE expression .)
    AND             reduce using rule 38 (expression -> expression NE expression .)
    OR              reduce using rule 38 (expression -> expression NE expression .)
    RPAREN          reduce using rule 38 (expression -> expression NE expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 67
    GT              shift and go to state 68
    LT              shift and go to state 69
    LE              shift and go to state 72
    GE              shift and go to state 73

  ! PLUS            [ reduce using rule 38 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression NE expression .) ]
  ! MOD             [ reduce using rule 38 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 38 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 38 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 38 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 38 (expression -> expression NE expression .) ]
  ! EQ              [ shift and go to state 70 ]
  ! NE              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 92

    (39) expression -> expression LE expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            reduce using rule 39 (expression -> expression LE expression .)
    GT              reduce using rule 39 (expression -> expression LE expression .)
    LT              reduce using rule 39 (expression -> expression LE expression .)
    EQ              reduce using rule 39 (expression -> expression LE expression .)
    NE              reduce using rule 39 (expression -> expression LE expression .)
    LE              reduce using rule 39 (expression -> expression LE expression .)
    GE              reduce using rule 39 (expression -> expression LE expression .)
    AND             reduce using rule 39 (expression -> expression LE expression .)
    OR              reduce using rule 39 (expression -> expression LE expression .)
    RPAREN          reduce using rule 39 (expression -> expression LE expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 67

  ! PLUS            [ reduce using rule 39 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 39 (expression -> expression LE expression .) ]
  ! GT              [ shift and go to state 68 ]
  ! LT              [ shift and go to state 69 ]
  ! EQ              [ shift and go to state 70 ]
  ! NE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! GE              [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 93

    (40) expression -> expression GE expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            reduce using rule 40 (expression -> expression GE expression .)
    GT              reduce using rule 40 (expression -> expression GE expression .)
    LT              reduce using rule 40 (expression -> expression GE expression .)
    EQ              reduce using rule 40 (expression -> expression GE expression .)
    NE              reduce using rule 40 (expression -> expression GE expression .)
    LE              reduce using rule 40 (expression -> expression GE expression .)
    GE              reduce using rule 40 (expression -> expression GE expression .)
    AND             reduce using rule 40 (expression -> expression GE expression .)
    OR              reduce using rule 40 (expression -> expression GE expression .)
    RPAREN          reduce using rule 40 (expression -> expression GE expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 67

  ! PLUS            [ reduce using rule 40 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 40 (expression -> expression GE expression .) ]
  ! GT              [ shift and go to state 68 ]
  ! LT              [ shift and go to state 69 ]
  ! EQ              [ shift and go to state 70 ]
  ! NE              [ shift and go to state 71 ]
  ! LE              [ shift and go to state 72 ]
  ! GE              [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 94

    (41) expression -> expression AND expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            reduce using rule 41 (expression -> expression AND expression .)
    AND             reduce using rule 41 (expression -> expression AND expression .)
    OR              reduce using rule 41 (expression -> expression AND expression .)
    RPAREN          reduce using rule 41 (expression -> expression AND expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 67
    GT              shift and go to state 68
    LT              shift and go to state 69
    EQ              shift and go to state 70
    NE              shift and go to state 71
    LE              shift and go to state 72
    GE              shift and go to state 73

  ! PLUS            [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! NE              [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 95

    (42) expression -> expression OR expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MOD expression
    (35) expression -> expression . GT expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NE expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . GE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression

    SEMI            reduce using rule 42 (expression -> expression OR expression .)
    OR              reduce using rule 42 (expression -> expression OR expression .)
    RPAREN          reduce using rule 42 (expression -> expression OR expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MOD             shift and go to state 67
    GT              shift and go to state 68
    LT              shift and go to state 69
    EQ              shift and go to state 70
    NE              shift and go to state 71
    LE              shift and go to state 72
    GE              shift and go to state 73
    AND             shift and go to state 74

  ! PLUS            [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! NE              [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 75 ]


state 96

    (44) expression -> LPAREN expression RPAREN .

    SEMI            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 44 (expression -> LPAREN expression RPAREN .)


state 97

    (54) argument -> ID . LPAREN arguments RPAREN
    (55) argument -> ID .

    LPAREN          shift and go to state 108
    COMMA           reduce using rule 55 (argument -> ID .)
    RPAREN          reduce using rule 55 (argument -> ID .)


state 98

    (45) expression -> ID LPAREN arguments . RPAREN

    RPAREN          shift and go to state 109


state 99

    (51) arguments -> argument . COMMA arguments
    (52) arguments -> argument .

    COMMA           shift and go to state 110
    RPAREN          reduce using rule 52 (arguments -> argument .)


state 100

    (53) arguments -> empty .

    RPAREN          reduce using rule 53 (arguments -> empty .)


state 101

    (56) argument -> INT .

    COMMA           reduce using rule 56 (argument -> INT .)
    RPAREN          reduce using rule 56 (argument -> INT .)


state 102

    (57) argument -> FLOAT .

    COMMA           reduce using rule 57 (argument -> FLOAT .)
    RPAREN          reduce using rule 57 (argument -> FLOAT .)


state 103

    (58) argument -> STRING .

    COMMA           reduce using rule 58 (argument -> STRING .)
    RPAREN          reduce using rule 58 (argument -> STRING .)


state 104

    (59) argument -> BOOL .

    COMMA           reduce using rule 59 (argument -> BOOL .)
    RPAREN          reduce using rule 59 (argument -> BOOL .)


state 105

    (29) print_statement -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 111


state 106

    (20) declaration_statement -> TYPE ID ASSIGN expression SEMI .

    TYPE            reduce using rule 20 (declaration_statement -> TYPE ID ASSIGN expression SEMI .)
    ID              reduce using rule 20 (declaration_statement -> TYPE ID ASSIGN expression SEMI .)
    IF              reduce using rule 20 (declaration_statement -> TYPE ID ASSIGN expression SEMI .)
    LOOP            reduce using rule 20 (declaration_statement -> TYPE ID ASSIGN expression SEMI .)
    BREAK           reduce using rule 20 (declaration_statement -> TYPE ID ASSIGN expression SEMI .)
    RETURN          reduce using rule 20 (declaration_statement -> TYPE ID ASSIGN expression SEMI .)
    PRINT           reduce using rule 20 (declaration_statement -> TYPE ID ASSIGN expression SEMI .)
    RBRACE          reduce using rule 20 (declaration_statement -> TYPE ID ASSIGN expression SEMI .)


state 107

    (22) if_statement -> IF LPAREN expression RPAREN block . else_statement
    (23) else_statement -> . ELSE block
    (24) else_statement -> . ELSE if_statement
    (25) else_statement -> . empty
    (60) empty -> .

    ELSE            shift and go to state 113
    TYPE            reduce using rule 60 (empty -> .)
    ID              reduce using rule 60 (empty -> .)
    IF              reduce using rule 60 (empty -> .)
    LOOP            reduce using rule 60 (empty -> .)
    BREAK           reduce using rule 60 (empty -> .)
    RETURN          reduce using rule 60 (empty -> .)
    PRINT           reduce using rule 60 (empty -> .)
    RBRACE          reduce using rule 60 (empty -> .)

    else_statement                 shift and go to state 112
    empty                          shift and go to state 114

state 108

    (54) argument -> ID LPAREN . arguments RPAREN
    (51) arguments -> . argument COMMA arguments
    (52) arguments -> . argument
    (53) arguments -> . empty
    (54) argument -> . ID LPAREN arguments RPAREN
    (55) argument -> . ID
    (56) argument -> . INT
    (57) argument -> . FLOAT
    (58) argument -> . STRING
    (59) argument -> . BOOL
    (60) empty -> .

    ID              shift and go to state 97
    INT             shift and go to state 101
    FLOAT           shift and go to state 102
    STRING          shift and go to state 103
    BOOL            shift and go to state 104
    RPAREN          reduce using rule 60 (empty -> .)

    arguments                      shift and go to state 115
    argument                       shift and go to state 99
    empty                          shift and go to state 100

state 109

    (45) expression -> ID LPAREN arguments RPAREN .

    SEMI            reduce using rule 45 (expression -> ID LPAREN arguments RPAREN .)
    PLUS            reduce using rule 45 (expression -> ID LPAREN arguments RPAREN .)
    MINUS           reduce using rule 45 (expression -> ID LPAREN arguments RPAREN .)
    TIMES           reduce using rule 45 (expression -> ID LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 45 (expression -> ID LPAREN arguments RPAREN .)
    MOD             reduce using rule 45 (expression -> ID LPAREN arguments RPAREN .)
    GT              reduce using rule 45 (expression -> ID LPAREN arguments RPAREN .)
    LT              reduce using rule 45 (expression -> ID LPAREN arguments RPAREN .)
    EQ              reduce using rule 45 (expression -> ID LPAREN arguments RPAREN .)
    NE              reduce using rule 45 (expression -> ID LPAREN arguments RPAREN .)
    LE              reduce using rule 45 (expression -> ID LPAREN arguments RPAREN .)
    GE              reduce using rule 45 (expression -> ID LPAREN arguments RPAREN .)
    AND             reduce using rule 45 (expression -> ID LPAREN arguments RPAREN .)
    OR              reduce using rule 45 (expression -> ID LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 45 (expression -> ID LPAREN arguments RPAREN .)


state 110

    (51) arguments -> argument COMMA . arguments
    (51) arguments -> . argument COMMA arguments
    (52) arguments -> . argument
    (53) arguments -> . empty
    (54) argument -> . ID LPAREN arguments RPAREN
    (55) argument -> . ID
    (56) argument -> . INT
    (57) argument -> . FLOAT
    (58) argument -> . STRING
    (59) argument -> . BOOL
    (60) empty -> .

    ID              shift and go to state 97
    INT             shift and go to state 101
    FLOAT           shift and go to state 102
    STRING          shift and go to state 103
    BOOL            shift and go to state 104
    RPAREN          reduce using rule 60 (empty -> .)

    argument                       shift and go to state 99
    arguments                      shift and go to state 116
    empty                          shift and go to state 100

state 111

    (29) print_statement -> PRINT LPAREN expression RPAREN SEMI .

    TYPE            reduce using rule 29 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    ID              reduce using rule 29 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 29 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    LOOP            reduce using rule 29 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    BREAK           reduce using rule 29 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 29 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 29 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 29 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)


state 112

    (22) if_statement -> IF LPAREN expression RPAREN block else_statement .

    TYPE            reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block else_statement .)
    ID              reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block else_statement .)
    IF              reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block else_statement .)
    LOOP            reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block else_statement .)
    BREAK           reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block else_statement .)
    RETURN          reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block else_statement .)
    PRINT           reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block else_statement .)
    RBRACE          reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block else_statement .)


state 113

    (23) else_statement -> ELSE . block
    (24) else_statement -> ELSE . if_statement
    (10) block -> . LBRACE statements RBRACE
    (22) if_statement -> . IF LPAREN expression RPAREN block else_statement

    LBRACE          shift and go to state 22
    IF              shift and go to state 37

    block                          shift and go to state 117
    if_statement                   shift and go to state 118

state 114

    (25) else_statement -> empty .

    TYPE            reduce using rule 25 (else_statement -> empty .)
    ID              reduce using rule 25 (else_statement -> empty .)
    IF              reduce using rule 25 (else_statement -> empty .)
    LOOP            reduce using rule 25 (else_statement -> empty .)
    BREAK           reduce using rule 25 (else_statement -> empty .)
    RETURN          reduce using rule 25 (else_statement -> empty .)
    PRINT           reduce using rule 25 (else_statement -> empty .)
    RBRACE          reduce using rule 25 (else_statement -> empty .)


state 115

    (54) argument -> ID LPAREN arguments . RPAREN

    RPAREN          shift and go to state 119


state 116

    (51) arguments -> argument COMMA arguments .

    RPAREN          reduce using rule 51 (arguments -> argument COMMA arguments .)


state 117

    (23) else_statement -> ELSE block .

    TYPE            reduce using rule 23 (else_statement -> ELSE block .)
    ID              reduce using rule 23 (else_statement -> ELSE block .)
    IF              reduce using rule 23 (else_statement -> ELSE block .)
    LOOP            reduce using rule 23 (else_statement -> ELSE block .)
    BREAK           reduce using rule 23 (else_statement -> ELSE block .)
    RETURN          reduce using rule 23 (else_statement -> ELSE block .)
    PRINT           reduce using rule 23 (else_statement -> ELSE block .)
    RBRACE          reduce using rule 23 (else_statement -> ELSE block .)


state 118

    (24) else_statement -> ELSE if_statement .

    TYPE            reduce using rule 24 (else_statement -> ELSE if_statement .)
    ID              reduce using rule 24 (else_statement -> ELSE if_statement .)
    IF              reduce using rule 24 (else_statement -> ELSE if_statement .)
    LOOP            reduce using rule 24 (else_statement -> ELSE if_statement .)
    BREAK           reduce using rule 24 (else_statement -> ELSE if_statement .)
    RETURN          reduce using rule 24 (else_statement -> ELSE if_statement .)
    PRINT           reduce using rule 24 (else_statement -> ELSE if_statement .)
    RBRACE          reduce using rule 24 (else_statement -> ELSE if_statement .)


state 119

    (54) argument -> ID LPAREN arguments RPAREN .

    COMMA           reduce using rule 54 (argument -> ID LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 54 (argument -> ID LPAREN arguments RPAREN .)

